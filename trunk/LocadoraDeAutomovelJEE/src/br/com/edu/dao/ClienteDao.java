/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package br.com.edu.dao;

import java.sql.CallableStatement;

import br.com.edu.dto.*;
import br.com.edu.exceptions.*;

public interface ClienteDao
{
	/** 
	 * Inserts a new row in the cliente table.
	 */
	public boolean insert(Cliente dto) throws ClienteDaoException;

	/** 
	 * Updates a single row in the cliente table.
	 */
	public boolean update(ClientePk pk, Cliente dto) throws ClienteDaoException;

	/** 
	 * Deletes a single row in the cliente table.
	 * @return 
	 */
	public boolean delete(ClientePk pk) throws ClienteDaoException;

	/** 
	 * Returns the rows from the cliente table that matches the specified primary-key value.
	 */
	public Cliente findByPrimaryKey(ClientePk pk) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'CPF = :cpf'.
	 */
	public Cliente findByPrimaryKey(String cpf) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria ''.
	 */
	public Cliente[] findAll() throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'CPF = :cpf'.
	 */
	public Cliente[] findWhereCpfEquals(String cpf) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'CNH = :cnh'.
	 */
	public Cliente[] findWhereCnhEquals(String cnh) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'nome = :nome'.
	 */
	public Cliente[] findWhereNomeEquals(String nome) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'endereco = :endereco'.
	 */
	public Cliente[] findWhereEnderecoEquals(String endereco) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'telefone = :telefone'.
	 */
	public Cliente[] findWhereTelefoneEquals(int telefone) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'data_nascimento = :dataNascimento'.
	 */
	public Cliente[] findWhereDataNascimentoEquals(String dataNascimento) throws ClienteDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the cliente table that match the specified arbitrary SQL statement
	 */
	public Cliente[] findByDynamicSelect(String sql, Object[] sqlParams) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the specified arbitrary SQL statement
	 */
	public Cliente[] findByDynamicWhere(String sql, Object[] sqlParams) throws ClienteDaoException;

}
