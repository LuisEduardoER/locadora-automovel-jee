/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package br.com.edu.dao;

import java.sql.CallableStatement;

import br.com.edu.dto.*;
import br.com.edu.exceptions.*;

public interface TipoDao
{
	/** 
	 * Inserts a new row in the tipo table.
	 */
	public TipoPk insert(Tipo dto) throws TipoDaoException;

	/** 
	 * Updates a single row in the tipo table.
	 */
	public void update(TipoPk pk, Tipo dto) throws TipoDaoException;

	/** 
	 * Deletes a single row in the tipo table.
	 */
	public void delete(TipoPk pk) throws TipoDaoException;

	/** 
	 * Returns the rows from the tipo table that matches the specified primary-key value.
	 */
	public Tipo findByPrimaryKey(TipoPk pk) throws TipoDaoException;

	/** 
	 * Returns all rows from the tipo table that match the criteria 'codigo = :codigo'.
	 */
	public Tipo findByPrimaryKey(int codigo) throws TipoDaoException;

	/** 
	 * Returns all rows from the tipo table that match the criteria ''.
	 */
	public Tipo[] findAll() throws TipoDaoException;

	/** 
	 * Returns all rows from the tipo table that match the criteria 'codigo = :codigo'.
	 */
	public Tipo[] findWhereCodigoEquals(int codigo) throws TipoDaoException;

	/** 
	 * Returns all rows from the tipo table that match the criteria 'tipo = :tipo'.
	 */
	public Tipo[] findWhereTipoEquals(String tipo) throws TipoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the tipo table that match the specified arbitrary SQL statement
	 */
	public Tipo[] findByDynamicSelect(String sql, Object[] sqlParams) throws TipoDaoException;

	/** 
	 * Returns all rows from the tipo table that match the specified arbitrary SQL statement
	 */
	public Tipo[] findByDynamicWhere(String sql, Object[] sqlParams) throws TipoDaoException;

}
